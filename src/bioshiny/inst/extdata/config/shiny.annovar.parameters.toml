[annovar.ui.sections]
order = ["readfiles"]
[annovar.ui.sections.ui_basic]
readfiles = "title = 'Input files', status = 'primary', width = 12, collapsed = FALSE, collapsible = TRUE"

[annovar.paramters.readfiles]
# For reading annovarR shiny APP annovar tool input files
section_type = "input"
rcmd_last = """
if (in_text != '') {
  in_file = tempfile()
  cat(in_text, file = in_file)
}
in_anno_names <- stringr::str_replace(in_anno_names, 'perl_annovar_', '')
#qqkey is also the query key
out_key <- qqkey

shiny_config <- Sys.getenv("BIOSHINY_CONFIG", system.file("extdata", "config/shiny.config.yaml",
                                                  package = "bioshiny"))
config <- configr::read.config(shiny_config)

out <- sprintf("~/%s/output/%s/%s", dirname(config$shiny_db$db_path), 
               out_key, basename(in_file))
out = normalizePath(out, mustWork = FALSE)

db_dir = normalizePath(config$shiny_download$download_dir, mustWork = FALSE)

annovarR::annotation(anno.name = "perl_annovar_merge",
input.file = in_file, annovar.anno.names = in_anno_names,
buildver = in_reffa, database.dir = db_dir,
annovar.dir = normalizePath(config$shiny_tools_path$annovar, mustWork = FALSE),
out = out)

"""
progressbar_message = ""
render_id = "annovar_readfiles"

#!!!!! input_ui_order required related section
input_ui_order = ["single_input", "start_analysis"]

[annovar.paramters.readfiles.input.single_input]
title = "Demo input:"
title_control = "class = 'input-section-p'"
varname = ["in_file", "in_text", "in_reffa",
"in_file_type", "in_anno_names"]
input_id = ["annovar_input_file", "annovar_input_file_area", "annovar_input_file_genome",
"annovar_input_file_type", "annovar_input_annotation_items"]
type = ["shiny::selectInput", "shiny::textAreaInput", "shiny::selectInput",
"shiny::selectInput", "shiny::selectInput"]
label = ["Input File (in_file)", "or Paste Variant Calls (in_text)", "Reference Genome (in_reffa)",
"Input Format (in_file_type)", "Annotaion Databases (in_anno_names)"]
[annovar.paramters.readfiles.input.single_input.choices]
in_file = "!!glue {featch_files()$file_path}"
in_reffa = ["hg19", "hg38", "mm9", "mm10"]
in_file_type = ["vcf", "vcf_old", "tsv", "avinput", "solid_gff3", "complete_genomics_masterVar"]
in_anno_names = ["all", "perl_annovar_refGene", "perl_annovar_ensGene", "perl_annovar_knownGene", "perl_annovar_cytoBand", "perl_annovar_genomicSuperDups", "perl_annovar_clinvar_20170905", "perl_annovar_esp6500siv2_all", "perl_annovar_1000g2015aug_all", "perl_annovar_1000g2015aug_afr", "perl_annovar_1000g2015aug_eas", "perl_annovar_1000g2015aug_eur", "perl_annovar_avsnp142", "perl_annovar_avsnp144", "perl_annovar_avsnp147", "perl_annovar_avsnp150", "perl_annovar_dbnsfp33a", "perl_annovar_dbnsfp35a", "perl_annovar_dbnsfp35c", "perl_annovar_cosmic70", "perl_annovar_cosmic81", "perl_annovar_cosmic82", "perl_annovar_eigen", "perl_annovar_gwava", "perl_annovar_cadd13", "perl_annovar_cadd13gt10", "perl_annovar_cadd13gt20", "perl_annovar_regsnpintron", "perl_annovar_mitimpact24", "perl_annovar_popfreq_all_20150413", "perl_annovar_popfreq_max_20150413", "perl_annovar_icgc21", "perl_annovar_nci60", "perl_annovar_gme", "perl_annovar_hrcr1", "perl_annovar_kaviar_20150923", "perl_annovar_gnomad_genome", "perl_annovar_gnomad_exome", "perl_annovar_exac03nonpsych", "perl_annovar_exac03nontcga", "perl_annovar_exac03", "perl_annovar_cg69", "perl_annovar_cg46", "perl_annovar_intervar_20170202", "perl_annovar_intervar_20180118", "perl_annovar_dbscsnv11"]
[annovar.paramters.readfiles.input.single_input.selected]
in_reffa = "hg19"
in_file_type = "avinput"
in_anno_names = ""
[annovar.paramters.readfiles.input.single_input.multiple]
in_anno_names = true
[annovar.paramters.readfiles.input.single_input.rows]
in_text = 15

[annovar.paramters.readfiles.input.start_analysis]
input_id = "start_annovar_analysis"
type = "shiny::actionButton"
label = "Submit"
